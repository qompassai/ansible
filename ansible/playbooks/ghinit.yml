---
- name: Initialize GitHub Repository with Qompass AI Standards
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    github_org: "QompassAI"
    repo_name: "{{ repo_name | default('new-repository') }}"
    repo_title: "{{ repo_title | default(repo_name) }}"
    repo_description: "{{ repo_description | default('A Qompass AI project') }}"
    github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
    author_name: "Matthew A. Porter"
    author_orcid: "https://orcid.org/0000-0002-0302-4812"
    author_affiliation: "Qompass AI"
    temp_dir: "/tmp/qompass-repo-init-{{ repo_name }}"
    date_released: "{{ lookup('pipe', 'date +%Y-%m-%d') }}"

  tasks:
    - name: Ensure GitHub CLI is installed
      package:
        name: github-cli
        state: present
      become: yes
      ignore_errors: yes

    - name: Create temporary directory
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: "0755"

    - name: Create GitHub repository
      command: >
        gh repo create {{ github_org }}/{{ repo_name }} 
        --description "{{ repo_description }}" 
        --public
      environment:
        GITHUB_TOKEN: "{{ github_token }}"
      register: repo_create
      changed_when: repo_create.rc == 0
      failed_when: repo_create.rc != 0 and "already exists" not in repo_create.stderr

    - name: Clone repository
      git:
        repo: "https://github.com/{{ github_org }}/{{ repo_name }}.git"
        dest: "{{ temp_dir }}"
        clone: yes
      environment:
        GIT_TERMINAL_PROMPT: "0"

    - name: Create CITATION.cff
      copy:
        dest: "{{ temp_dir }}/CITATION.cff"
        content: |
          cff-version: 1.2.0
          message: "If you use this software, please cite it as below."
          title: "{{ repo_title }}"
          authors:
            - family-names: "Porter"
              given-names: "Matthew A."
              orcid: "{{ author_orcid }}"
              affiliation: "{{ author_affiliation }}"
          version: "1.0.0"
          date-released: "{{ date_released }}"
          url: "https://github.com/{{ github_org }}/{{ repo_name }}"
          repository-code: "https://github.com/{{ github_org }}/{{ repo_name }}"
          license: "AGPL-3.0 AND Qompass-Commercial-Data-Agreement"
          keywords:
            - quantum
            - AI
            - post-quantum-cryptography
            - education
            - healthcare
          abstract: "{{ repo_description }}"

    - name: Create .zenodo.json
      copy:
        dest: "{{ temp_dir }}/.zenodo.json"
        content: |
          {
            "creators": [
              {
                "name": "Porter, Matthew A.",
                "orcid": "0000-0002-0302-4812",
                "affiliation": "Qompass AI"
              }
            ],
            "title": "{{ repo_title }}",
            "description": "{{ repo_description }}",
            "access_right": "open",
            "license": {
              "id": "AGPL-3.0"
            },
            "keywords": ["quantum", "AI", "post-quantum-cryptography", "education", "healthcare"],
            "publication_date": "{{ date_released }}",
            "version": "1.0.0",
            "language": "eng"
          }

    - name: Create LICENSE-AGPL
      copy:
        dest: "{{ temp_dir }}/LICENSE-AGPL"
        content: |
          GNU AFFERO GENERAL PUBLIC LICENSE
          Version 3, 19 November 2007

          Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
          Everyone is permitted to copy and distribute verbatim copies
          of this license document, but changing it is not allowed.

          [Full AGPL-3.0 license text here]

    - name: Create LICENSE-QCDA
      copy:
        dest: "{{ temp_dir }}/LICENSE-QCDA"
        content: |
          Qompass Commercial Data Agreement (QCDA)

          Copyright (C) {{ lookup('pipe', 'date +%Y') }} Qompass AI

          This license governs use of the accompanying software and data. If you use the software and data, you accept this license. If you do not accept the license, do not use the software and data.

          [Full QCDA license text here]

    - name: Create README.md
      copy:
        dest: "{{ temp_dir }}/README.md"
        content: |
          # {{ repo_title }}

          {{ repo_description }}

          ## License

          This project is dual-licensed under:

          - [GNU Affero General Public License v3.0](LICENSE-AGPL) for open source use
          - [Qompass Commercial Data Agreement](LICENSE-QCDA) for commercial use

          ## Citation

          If you use this software in your research, please cite it as:

          ```
          @software{porter_{{ repo_name | lower }}_{{ lookup('pipe', 'date +%Y') }},
            author       = {Porter, Matthew A.},
            title        = { {{ repo_title }} },
            month        = {{ lookup('pipe', 'date +%b') | lower }},
            year         = {{ lookup('pipe', 'date +%Y') }},
            publisher    = {GitHub},
            url          = {https://github.com/{{ github_org }}/{{ repo_name }}}
          }
          ```

    - name: Create .gitignore
      copy:
        dest: "{{ temp_dir }}/.gitignore"
        content: |
          # Python
          __pycache__/
          *.py[cod]
          *$py.class
          *.so
          .Python
          env/
          build/
          develop-eggs/
          dist/
          downloads/
          eggs/
          .eggs/
          lib/
          lib64/
          parts/
          sdist/
          var/
          wheels/
          *.egg-info/
          .installed.cfg
          *.egg

          venv/
          ENV/

          .idea/
          .vscode/
          *.swp
          *.swo

          .DS_Store
          Thumbs.db

          .ipynb_checkpoints

          .env
          .secrets

    - name: Create .gitattributes
      copy:
        dest: "{{ temp_dir }}/.gitattributes"
        content: |
          # Auto detect text files and perform LF normalization
          * text=auto

          # Source code
          *.py text diff=python
          *.rs text diff=rust
          *.c text diff=c
          *.cpp text diff=cpp
          *.h text diff=c

          # Documentation
          *.md text diff=markdown
          *.txt text
          *.pdf binary

          # Data files
          *.json text
          *.yaml text
          *.yml text
          *.csv text
          *.dat binary

          # Jupyter notebooks
          *.ipynb text

          # Graphics
          *.png binary
          *.jpg binary
          *.jpeg binary
          *.gif binary
          *.svg text

    - name: Commit and push files
      shell: |
        cd {{ temp_dir }}
        git config user.name "Qompass AI"
        git config user.email "admin@qompass.ai"
        git add .
        git commit -m "Initialize repository with Qompass AI standards"
        git push
      environment:
        GIT_TERMINAL_PROMPT: "0"

    - name: Clean up temporary directory
      file:
        path: "{{ temp_dir }}"
        state: absent
      when: repo_create.rc == 0

    - name: Display repository URL
      debug:
        msg: "Repository created successfully: https://github.com/{{ github_org }}/{{ repo_name }}"
      when: repo_create.rc == 0
